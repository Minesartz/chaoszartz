package tv.twitch.minezartz.chaoszartz.registry;

import net.fabricmc.fabric.api.item.v1.FabricItemSettings;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.item.*;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.util.Identifier;
import tv.twitch.minezartz.chaoszartz.ChaosZartz;
import tv.twitch.minezartz.chaoszartz.item.*;
import tv.twitch.minezartz.chaoszartz.item.BucketItem;

public class ChaosZartzItems {

    private static ItemGroup ChaosZartzItems;
    public static final Item BEANS = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "beans"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.BEETROOT)));
    public static final Item CHOCOLATE_BAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "chocolate_bar"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKIE)));
    public static final Item WHITE_CHOCOLATE_BAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "white_chocolate_bar"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKIE)));
    public static final Item COOKIES_AND_CREAM_BAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cookies_and_cream_bar"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKIE)));
    public static final Item CHERRY_CHOCOLATE_BAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cherry_chocolate_bar"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKIE)));
    public static final Item GOLDEN_COATED_CHOCOLATE_BAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "golden_coated_chocolate_bar"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(6).saturationModifier(9).statusEffect(new StatusEffectInstance(StatusEffects.SPEED, 200, 2), 1.0F).alwaysEdible().build())));
    public static final Item DARK_CHOCOLATE_BAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "dark_chocolate_bar"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKIE)));
    public static final Item PINEAPPLE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "pineapple"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.APPLE)));
    public static final Item CHERRIES = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cherries"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final MegaTridentItem ADMIN_TRIDENT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "admin_trident"), new MegaTridentItem(new FabricItemSettings().maxCount(1).maxDamage(1000).fireproof()));
    public static final Item DOUGH = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "dough"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 100, 1), 1.0F).alwaysEdible().build())));
    public static final Item LONG_BREAD = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "long_bread"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(7).saturationModifier(8).build())));
    public static final HumanSpongeItem HUMAN_FLESH = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "human_flesh"), new HumanSpongeItem(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.HUNGER, 300, 6), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.POISON, 300, 7), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 400, 7), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.WITHER, 100, 3), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.SLOWNESS, 300, 1), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.BLINDNESS, 800, 1), 1.0F).alwaysEdible().build())));
    public static final Item FLOUR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "flour"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.ROTTEN_FLESH)));
    public static final Item MINI_BREAD = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "mini_bread"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item DIAMOND_SHARD = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "diamond_shard"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item GOLDEN_CHERRIES = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "golden_cherries"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(4).saturationModifier(1.2F).statusEffect(new StatusEffectInstance(StatusEffects.ABSORPTION, 200, 2), 1.0F).alwaysEdible().build())));
    public static final Item GOLDEN_PINEAPPLE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "golden_pineapple"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(4).saturationModifier(1.2F).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION, 200, 2), 1.0F).alwaysEdible().build())));
    public static final Item SCORCHED_NETHER_WART = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "scorched_nether_wart"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().saturationModifier(2).hunger(2).snack().alwaysEdible().build())));
    public static final Item LONG_DOUGH = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "long_dough"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 300, 3), 1.0F).statusEffect(new StatusEffectInstance(StatusEffects.HUNGER, 300, 3), 1.0F).alwaysEdible().build())));
    public static final BottleItem BOTTLE_OF_WINE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_wine"), new BottleItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 400, 3), 1.0F).alwaysEdible().build())));
    public static final BottleItem BOTTLE_OF_GRAPE_JUICE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_grape_juice"), new BottleItem(new FabricItemSettings().maxCount(1).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    public static final Item PUMPKIN_COOKIE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "pumpkin_cookie"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKIE)));
    public static final Item GRAPES = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "grapes"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item ORANGE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "orange"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.APPLE)));
    public static final Item LEMON = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "lemon"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.APPLE)));
    public static final WritableBookItem THE_WATTPAD_BOOK = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "the_wattpad_book"), new WritableBookItem(new FabricItemSettings().maxCount(1)));
    public static final BottleItem BOTTLE_OF_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_cream"), new BottleItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    public static final BottleItem LEMONADE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "lemonade"), new BottleItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    public static final Item PUMPKIN_SLICE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "pumpkin_slice"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.MELON_SLICE)));
    public static final CrunchItem ICE_CHUNKS = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "ice_chunks"), new CrunchItem(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().alwaysEdible().snack().build())));
    public static final Item BARLEY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "barley"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item MALT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "malt"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item LIGHT_MALT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "light_malt"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item DARK_MALT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "dark_malt"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item BUTTER = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "butter"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.SLOWNESS, 200, 3), 1.0F).alwaysEdible().build())));
    public static final Item COCOA_BUTTER = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cocoa_butter"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.SLOWNESS, 200, 3), 1.0F).alwaysEdible().build())));
    static final BottleItem BOTTLE_OF_APPLE_JUICE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_apple_juice"), new BottleItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    static final NEBItem BOTTLE_OF_ORANGE_JUICE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_orange_juice"), new NEBItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    static final Item FERMENTED_GRAPES = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "fermented_grapes"), new Item(new FabricItemSettings().maxCount(1).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA, 400, 3), 1.0F).alwaysEdible().build())));
    static final RosebaneItem ROSEBANE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "rosebane"), new RosebaneItem(ToolMaterials.NETHERITE, 0, 1, new FabricItemSettings().maxCount(1).maxDamage(1500).fireproof()));
    //static final GunItem GUN = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "gun"), new GunItem
    public static final Item RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item EMERALD_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "emerald_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item DIAMOND_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "diamond_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item REDSTONE_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "redstone_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item AMETHYST_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "amethyst_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item COPPER_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "copper_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item QUARTZ_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "quartz_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item LAPIS_RING = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "lapis_ring"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item TEMPLATE_OF_ORCHIDIOUS = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "template_of_orchidious"), new Item(new FabricItemSettings().maxCount(1)));
    public static final Item COOKED_VEGGIE_BEEF = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cooked_veggie_beef"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_BEEF)));
    public static final Item UNCOOKED_VEGGIE_BEEF = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "uncooked_veggie_beef"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.BEEF)));
    public static final Item BAKED_CARROT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "baked_carrot"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.BAKED_POTATO)));
    public static final Item APPLE_PIE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "apple_pie"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.PUMPKIN_PIE)));
    public static final Item CHERRY_PIE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cherry_pie"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.PUMPKIN_PIE)));
    public static final Item JICAMA = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "jicama"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.BEETROOT)));
    public static final OilItem BOTTLE_OF_VEGETABLE_OIL = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_vegetable_oil"), new OilItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    public static final Item SALT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "salt"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).statusEffect(new StatusEffectInstance(StatusEffects.SLOWNESS, 100, 3), 1.0F).alwaysEdible().build())));
    public static final Item CHURRO = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "churro"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.BREAD)));
    public static final Item CINNAMON = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cinnamon"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final BottleItem DANDELION_TEA = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "dandelion_tea"), new BottleItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    public static final BottleItem ORCHID_TEA = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "orchid_tea"), new BottleItem(new FabricItemSettings().maxCount(16).food(new FoodComponent.Builder().hunger(0).saturationModifier(0F).build())));
    public static final Item TORTILLA = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "tortilla"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.BREAD)));
    public static final Item RED_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "red_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item ORANGE_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "orange_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item YELLOW_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "yellow_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item LIME_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "lime_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item GREEN_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "green_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item CYAN_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cyan_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item LIGHT_BLUE_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "light_blue_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item BLUE_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "blue_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item PURPLE_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "purple_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item MAGENTA_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "magenta_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item PINK_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "pink_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item BLACK_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "black_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item GRAY_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "gray_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item LIGHT_GRAY_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "light_gray_candy"), new Item(new FabricItemSettings().food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item BROWN_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "brown_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item WHITE_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "white_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item RAINBOW_CANDY = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "rainbow_candy"), new Item(new FabricItemSettings().maxCount(64).food(new FoodComponent.Builder().hunger(1).saturationModifier(1).snack().alwaysEdible().build())));
    public static final Item BOTTLE_OF_CARAMELIZED_SUGAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_caramelized_sugar"), new Item(new FabricItemSettings().maxCount(16)));
    public static final Item BOTTLE_OF_SUGAR = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_sugar"), new Item(new FabricItemSettings().maxCount(16)));
    public static final Item STACKED_PAPER = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "stacked_paper"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item KELP_WRAPPED_COD_SUSHI = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "kelp_wrapped_cod_sushi"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_COD)));
    public static final Item KELP_WRAPPED_SALMON_SUSHI = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "kelp_wrapped_salmon_sushi"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_SALMON)));
    public static final Item KELP_WRAPPED_TROPCIAL_SUSHI = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "kelp_wrapped_tropical_sushi"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_COD)));
    public static final Item COD_SUSHI = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cod_sushi"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_COD)));
    public static final Item SALMON_SUSHI = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "salmon_sushi"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_SALMON)));
    public static final Item TROPCIAL_SUSHI = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "tropical_sushi"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_COD)));
    public static final Item COOKED_TROPICAL_FISH = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cooked_tropical_fish"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_COD)));
    public static final Item CHICKEN_POT_PIE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "chicken_pot_pie"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.COOKED_CHICKEN)));
    public static final Item RICE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "rice"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item VANILLA_ICE_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "vanilla_ice_cream"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item CHERRY_ICE_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "cherry_ice_cream"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item CHOCOLATE_ICE_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "chocolate_ice_cream"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item VANILLA_BEAN = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "vanilla_bean"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item LIME = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "lime"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.APPLE)));
    public static final Item TOMATO = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "tomato"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.APPLE)));
    public static final Item ICE_CREAM_CONE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "ice_cream_cone"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item TAJIN_POWDER = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "tajin_powder"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item POTATO_IN_A_BUCKET = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "potato_in_a_bucket"), new Item(new FabricItemSettings().maxCount(1).food(FoodComponents.SWEET_BERRIES)));
    public static final Item BOTTLE_OF_VANILLA_EXTRACT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_vanilla_extract"), new Item(new FabricItemSettings().maxCount(16).food(FoodComponents.SWEET_BERRIES)));
    public static final Item PUMPKIN_SPICE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "pumpkin_spice"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.SWEET_BERRIES)));
    public static final Item KEYLIME_PIE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "keylime_pie"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.PUMPKIN_PIE)));
    public static final Item JICAMA_TAJIN_LIME = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "jicama_tajin_lime"), new Item(new FabricItemSettings().maxCount(1).food(FoodComponents.BAKED_POTATO)));
    public static final Item CHOCOLATE_PIE = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "chocolate_pie"), new Item(new FabricItemSettings().maxCount(64).food(FoodComponents.PUMPKIN_PIE)));
    public static final BucketItem BUCKET_OF_VODKA = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bucket_of_vodka"), new BucketItem(new FabricItemSettings().maxCount(1).recipeRemainder(Items.BUCKET).food(FoodComponents.SWEET_BERRIES)));
    public static final BottleItem BOTTLE_OF_VODKA = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bottle_of_vodka"), new BottleItem(new FabricItemSettings().maxCount(16).recipeRemainder(Items.GLASS_BOTTLE).food(FoodComponents.SWEET_BERRIES)));
    public static final Item BOWL_OF_VANILLA_ICE_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bowl_of_vanilla_ice_cream"), new Item(new FabricItemSettings().maxCount(64).recipeRemainder(Items.BOWL).food(FoodComponents.SWEET_BERRIES)));
    public static final Item BOWL_OF_CHOCOLATE_ICE_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bowl_of_chocolate_ice_cream"), new Item(new FabricItemSettings().maxCount(64).recipeRemainder(Items.BOWL).food(FoodComponents.SWEET_BERRIES)));
    public static final Item BOWL_OF_CHERRY_ICE_CREAM = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "bowl_of_cherry_ice_cream"), new Item(new FabricItemSettings().maxCount(64).recipeRemainder(Items.BOWL).food(FoodComponents.SWEET_BERRIES)));
    public static final Item CLOVER = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "clover"), new Item(new FabricItemSettings().maxCount(64)));
    public static final Item MINT = Registry.register(Registries.ITEM, new Identifier(ChaosZartz.MODID, "mint"), new Item(new FabricItemSettings().maxCount(64)));
}